Starting with domain enumeration you want to map various entities, trusts, relationships, and privileges for the target domain.

Domain enumeration with Powerview and AD-module

Get current domain
Get-NetDomain (powerview)
Get-ADDomain (AD-module)

Get object of another domain
Get-NetDomain -Domain moneycorp.local
Get ADDomain - Identity moneycorp.local

Get domain SID for the current domain
Get-DomainSID
(Get-ADDomain).DomainSIDGet-NetDomain

Domain enumeration with Powerview and AD-module

Get domain policy for the current domain (useful for enumerating password policy)
Get-DomainPolicy
(Get-DomainPolicy).”system access”

Get domain policy for another domain
(Get-DomainPolicy -domain moneycorp.local).”system access”

Get domain controllers for the current domain
Get-NetDomainController
Get-ADDomainController

Get domain controllers for another domain 
Get-NetDomainController -Domain moneycorp.local
Get-ADDomainController -DomainName moneycorp.local - Discover

-------------------------------------------------------------------------------------------------------------------------

User Enumeration with Powerview and AD-module

Get a list of users in the current domain

Get-NetUser
Get-NetUser -Username student1
Get-ADUser -Filter * -Properties *
Get-ADUser -Identity student1 -Properties *

Get List of all properties for users in the current domain
Get -UserProperty
Get -UserProperty -Properties pwdlastset

Use this command to just get users on a domain by common name (cn)
Get-NetUser | select cn

This command will find how many times a user has logged on 

Get-UserProperty -Properties logoncount
* after entering the above command if you see a user with the logon count of 0 this usually means the account is never used or it is a decoy user

To look for keywords in user descriptions use this command and to enumerate the description fields in domain users 

Find-UserFiled -SearchField Description -SearchTerm “built” PV
You can also enter other things in the above command in the “” marks such as password ect

to list specific propert of all the users say samaccountname
Get-NetUser | select -ExpandProperty samaccountname
------------------------------------------------------------------------------------------------------------------------------

Get a list of computers in the current domain
Get-NetComputer
Get-NetComputer -OperatingSystem “*Server 2016*” 
(finds all the computers in a domain with server 2016 OS)

Get-NetComputer -Ping
Checks if a machine is alive or not

Get-NetComputer -FullData
Get-NetComputer -FullData | select operatingsystem
Another way of getting the operating system for computers in the domain 

Once we have the basic information, user information, and the computer information we can move ahead and start enumerating groups in the current domain.

Get all the groups in the current domain
Get-NetGroup

Provides a list of all domain groups
Get-NetGroup -Domain <targetdomain>
Get-NetGroup -FullData
Get-ADGroup -Filter * | select Name
Get-ADGroup -Filter * -Properties *

Get-NetGroup ‘Domain Admins’ -FullData
The above command is how you extract all data just about one group 

Get all groups containing the word “admin” in group name
Get-NetGroup *admin*
Get-ADGroup -Filter ‘Name -Like “*admin*”’ | select name

What if we want to retrieve the memberships of the groups 

Get all the members of the Domain Admins group
Get-NetGroupMember -GroupName “Domain Admins” -Recurse
Get-ADGroupMember -Identity “Domain Admins” -Recursive

to enumerate members of the enterprise admins group
Get-NetGroupMember -GroupName "Enterprise Admins"

Get the group membership for a user
Get-NetGroup -Username “student1”
Get-ADPrincipalGroupMembership _Identity student1

We can have a custom group which is part of the Domain Admins group

If an organization uses the default administration user but renames it to something else it is useless because the MemberSID  

List all the local groups on a machine (needs administrator privs on non dc machines)
Get-NetLocalGroup -ComputerName dcorp-dc.dollarcorp.moneycorp.local - ListGroups

Get members of all the local groups on a machine (needs administrator privs on non dc machines)
Get-NetLocalGroup -ComputerName dcorp-dc.dollarcorp.moneycorp.local -Recurse

Get actively logged users on a computer (needs local admin rights on the target)
Get-NetLoggedon -ComputerName <servername>

Get locally logged users on a computer (needs remote registry on the target - started by default server on the OS)
Get-LoggedonLocal -ComputerName dcorp-dc.dollarcorp.moneycorp.local

Get the last logged user on a computer (needs administrative rights and remote registry on the target 
Get-LastLoggedOn -ComputerName <servername>

Find shares on hosts in the current domain
Invoke-ShareFinder -Verbose

Find sensitive files on computers in the domain
Invoke-FileFinder -Verbose

Get all FileServers of the domain 
Get-NetFileServer














































































