                                                                     General Concepts


All privilege escalations are effectively exmaples of access control violations.

access control and user permissions are intrinsically linked.

when focusing on privielege escalation in windows, understanding how windows handles permissions is very important

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                    Understanding Permissions
                                                                          USER ACCOUNTS

User accounts are used to log into a windows system. Think of a user account as a collection of settings / prefrences bound to a unique identity 

the local "Administrator" account is created by default at installation. Several other default iser accounts may exist guest etc.
depending on the version of windows 

                                                                          SERVICE ACCOUNTS
Service accounts are used to run services in windows. 

Service accounts cannot be used to sign into a Windows system.

the SYSTEM account is a efault service account which has the highest privileges of any local account in windows.

other default service accounts include NETWORK SERVICE and LOCAL SERVICE

                                                                              GROUPS
User accounts can belong to multiple groups, amd groups can have multiple users.

Groups allow for easier access control to resources.

Regular groups example Administrators have a set list of members.

Pseudo groups example "Authenticated Users" have a dynamic list of members whuch changes based on certain interactions.

                                                                          RESOURCES/OBJECTS

In windows, there are multiple types of resource or objects

- files / directories
- Registry Entries
- Services 

weather a user and/or group has permission to perform a certain action on a resource depends on that resource's access control list (ACL)

                                                                          ACLs & ACEs
Permissions to access a certain resource in windows are controlled by the access control list or ACL for that resource

each ACL is made up of zero or more access control entries or ACEs

Each ACE defines the relationship between a principal example a user or group, and a certain access right.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                         SERVICE EXPLOITS

Services are simpely programs that run in the background accepting input or performing regular tasks

if services run with SYSTEM privileges and are miconfigured, exploiting them may lead to command execution with SYSTEM privileges as well

                                                                        Service misconfigurations
1. insecure service properties
2. unquoted service path
3. weak registry permissions 
4. insecure service executables
5. DLL Hijacking

                                                                      Insecure Service Permissions
                                                                      
Each Service has an ACL which defines certain service-specific permissions.

if our user has permission to change the configuration of a service which runs with SYSTEM privileges we can change the executable the service uses to one of our own.

POTENTIAL RABBIT HOLE
if you can change a service configuration but cannot stop/start the service you may not be able to escalate privileges 

                                                                      Unquoted Service Path

Executables in windows can be run without usng their extension example whoami.exe can be run just by typing whoami

Some Executables take arguments seperated by spaces

this behaviour leads to ambiguity when using absolute paths that are unquoted and contain spaces

consider the following unquoted path:
C:\Program Files\Some Dir\SomeProgram.exe

to us, this obviously runs someprogram.exe to windows C:\Program could be the executables with two arguments "Files\Some" and "Dir\SomeProgram.exe"

windows resolves this ambiguity by checking each of the possibilities in turn

if we can write to a location windows checks before the actual executable, we can trick the service into executing it instead


                                                                     Weak Registry Permissions
The Windows Registry stores entries for each service.

Since registry entries can have ACLs, if the ACL is misconfigured it may be possible to modify a services configuration even if we cannot modify 
the service directly

                                                                     Insecure Service Executables
                                                                     
if the original servic executable is modifiable by our user we can simply replace it with out reverse shel executable

remember to creat a backup of the original executable if you are exploiting this in a real system


                                                                          DLL Hijacking

often a service will try to load functionality from a library called a DLL (dynamic-link library). Whatever functionality the DLL provides, will be executed
with the ssme privileges as the service that loaded it

if a DLL is loaded with an absolute path, it might be possible to escalate privileges if that DLL is writeable by our user

a more common misconfiguration that can be used to escalate privileges is if a DLL is missing from the system, and our user has write access to a directory within
the PATH that windows searches for DLLs in

Unfortunatly, inital detection of vulnerable services is difficult ad often the entire process is manual 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                        Registry Exploits
                                                                        
                                                                            AutoRuns
Windows can be configured to run commands at startup, with elevated privileges

these "AutoRuns" are configured in the Registry.

if you are able to write to an AutoRun executable, and are able to restart the system (or wait for it to be restarted) you may be able to escalate privileges.

                                                                       Always Install Elevated
MSI files are package files used to install apllications. 

these files run with the permissions of the user trying to install them

Windows allows for these installers to be run with elevated (admin) privileges 

if this is the case we can generate a malicious MSI file which contains a reverse shell

THE CATCH:

the catch is that two registry settings must be enabled for this to work. 

The "AlwaysInstallElevated" value must be set to 1 for both the local machine:
HKLM\Software\Polices\Microsoft\Windows\Installer

and the current user:
HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer 

if either of these are misiong or disabled, the exploit will not work.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          PASSWORDS
                                                                          
Even Administrators re-use their passwords, or leave their passwords on systems in readable locations

Windows can be especially vulnerable to this, as several features of windows store passwords insecurely.

                                                                          Registry
                                                                          
Plenty of programs store configuration options in the Windows Registry

Windows itself sometimes will store passwords in plaintext in the Registry 

its always worth searching the registry for passwords
                                                                              
                                                                         Saved Creds

Windows has a runas command which allows users to run commands with the privileges of other users.

this usually requires the knowledge of the other user's password

However, Windows also allows users to save their credentials to the system, and these saved credentials can be used to bypass this requirment

                                                                       Configuration Files

Some Administrators will leave configuration files on the system with passwords in them

the Unattend.xml file is an example of this.

It allows for the largely automated setup of windows systems

                                                                            SAM
Windows stores password hashes in the security account manager SAM

the hashes are encrypted with a key which can be found in a file named SYSTEM

if you have the ability to read the SAM and SYSTEM files, you can extract the hashes

The SAM and SYSTEM files are located in the C:\Windows\System32\config directory

the files are locked while windows is running

backups of the file may exsist in the C:\Windows\Repair\ or C:\Windows\System32\config\RegBack directories

                                                                      Passing the Hash 
                                                                      
windows accepts hashes instead of passwords to authenticate to a number of services

We can use a modified version of winexe, pth-winexe to spawn a command prompt using the admin user's hash

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                      Scheduled Tasks

Windows can be configured to run tasks at specefic times, periodically or when triggered by some event 

Taks usually run with the privileges of the user who created them, however administrators can configure tasks to run as other users including SYSTEM

often we have to rely on other clues, such as finding a script or log file that indicates a scheduled task is being run 


                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
                                                                         
